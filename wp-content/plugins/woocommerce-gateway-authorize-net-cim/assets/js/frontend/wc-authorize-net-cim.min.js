/*
 WooCommerce Authorize.Net CIM Accept.js Handler
 Version 2.3.2-1

 Copyright (c) 2016, SkyVerge, Inc.
 Licensed under the GNU General Public License v3.0
 http://www.gnu.org/licenses/gpl-3.0.html
 */

(function() {
  var indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  jQuery(document).ready(function($) {
    "use strict";
    window.WC_Authorize_Net_CIM_Credit_Card_Accept_JS_Handler = (function() {
      function WC_Authorize_Net_CIM_Credit_Card_Accept_JS_Handler() {
        this.params = window['wc_authorize_net_cim_params'];
        if (this.params === void 0) {
          return;
        }
        if (this.params.accept_js_enabled) {
          $(document.body).on('sv_wc_payment_form_valid_payment_data', (function(_this) {
            return function(event, data) {
              return _this.init(event, data);
            };
          })(this));
          $(document.body).on('checkout_error', (function(_this) {
            return function() {
              return $("input[name=wc-authorize-net-cim-credit-card-payment-nonce]").val('');
            };
          })(this));
          $(document.body).on('updated_checkout', (function(_this) {
            return function() {
              return _this.handle_saved_payment_methods();
            };
          })(this));
        }
      }

      WC_Authorize_Net_CIM_Credit_Card_Accept_JS_Handler.prototype.init = function(event, data) {
        this.payment_form = data.payment_form;
        this.errors = [];
        if (this.payment_form.id !== 'authorize_net_cim_credit_card') {
          return void 0;
        }
        if (this.payment_form.saved_payment_method_selected) {
          return void 0;
        }
        if (!data.passed_validation) {
          return void 0;
        }
        if (!this.payment_form.payment_fields.find('input[name=wc-authorize-net-cim-credit-card-payment-nonce]').length) {
          return true;
        }
        if (this.has_nonce()) {
          return true;
        }
        this.dispatch_card();
        return false;
      };

      WC_Authorize_Net_CIM_Credit_Card_Accept_JS_Handler.prototype.dispatch_card = function() {
        this.payment_form.block_ui();
        return Accept.dispatchData(this.get_request_data(), 'wc_authorize_net_cim_credit_card_accept_js_response_handler');
      };

      WC_Authorize_Net_CIM_Credit_Card_Accept_JS_Handler.prototype.get_request_data = function() {
        var csc, data, expiry;
        expiry = $.payment.cardExpiryVal($('input[name=wc-authorize-net-cim-credit-card-expiry]').val());
        data = {
          authData: {
            clientKey: this.params.client_key,
            apiLoginID: this.params.login_id
          },
          cardData: {
            cardNumber: $('input[id=wc-authorize-net-cim-credit-card-account-number]').val().replace(/-|\s/g, ''),
            month: expiry.month.toString(),
            year: expiry.year.toString()
          }
        };
        csc = this.payment_form.payment_fields.find('input[id=wc-authorize-net-cim-credit-card-csc]').val();
        if ((csc != null) && this.payment_form.csc_required) {
          data.cardData.cardCode = csc;
        }
        return data;
      };

      WC_Authorize_Net_CIM_Credit_Card_Accept_JS_Handler.prototype.handle_response = function(response) {
        var i, len, message, ref;
        if (response.messages.resultCode !== 'Error') {
          this.set_nonce(response.opaqueData.dataValue, response.opaqueData.dataDescriptor);
          return this.payment_form.form.submit();
        } else {
          ref = response.messages.message;
          for (i = 0, len = ref.length; i < len; i++) {
            message = ref[i];
            this.handle_error(message.code, message.text);
          }
          this.payment_form.render_errors(this.errors);
          return this.payment_form.unblock_ui();
        }
      };

      WC_Authorize_Net_CIM_Credit_Card_Accept_JS_Handler.prototype.set_nonce = function(nonce, descriptor) {
        var card_number;
        $('input[name=wc-authorize-net-cim-credit-card-payment-nonce]').val(nonce);
        $('input[name=wc-authorize-net-cim-credit-card-payment-descriptor]').val(descriptor);
        card_number = $('input[id=wc-authorize-net-cim-credit-card-account-number]').val();
        $('input[name=wc-authorize-net-cim-credit-card-card-type]').val($.payment.cardType(card_number));
        return $('input[name=wc-authorize-net-cim-credit-card-last-four]').val(card_number.slice(-4));
      };

      WC_Authorize_Net_CIM_Credit_Card_Accept_JS_Handler.prototype.handle_error = function(code, message) {
        console.log('Authorize.Net CIM Error: ' + message + ' (' + code + ')');
        switch (code) {
          case 'E_WC_05':
            message = this.payment_form.params.card_number_invalid;
            break;
          case 'E_WC_06':
          case 'E_WC_07':
          case 'E_WC_08':
          case 'E00073':
            message = this.payment_form.params.card_exp_date_invalid;
            break;
          case 'E_WC_15':
            message = this.payment_form.params.cvv_length_invalid;
            break;
          default:
            message = this.params.general_error;
        }
        if (indexOf.call(this.errors, message) < 0) {
          return this.errors.push(message);
        }
      };

      WC_Authorize_Net_CIM_Credit_Card_Accept_JS_Handler.prototype.has_nonce = function() {
        return $('input[name=wc-authorize-net-cim-credit-card-payment-nonce]').val();
      };

      WC_Authorize_Net_CIM_Credit_Card_Accept_JS_Handler.prototype.handle_saved_payment_methods = function() {
        var fw_csc_input_class;
        fw_csc_input_class = 'js-sv-wc-payment-gateway-credit-card-form-csc';
        return $('input.js-wc-authorize-net-cim-credit-card-payment-token').change(function() {
          var $fieldset;
          $fieldset = $('#wc-authorize-net-cim-credit-card-credit-card-form');
          if ($("input.js-wc-authorize-net-cim-credit-card-payment-token:checked").val()) {
            $fieldset.hide();
            return $('#wc-authorize-net-cim-credit-card-csc').removeClass(fw_csc_input_class);
          } else {
            $('#wc-authorize-net-cim-credit-card-csc').addClass(fw_csc_input_class);
            return $fieldset.show();
          }
        });
      };

      return WC_Authorize_Net_CIM_Credit_Card_Accept_JS_Handler;

    })();
    window.wc_authorize_net_cim_credit_card_accept_js_handler = new WC_Authorize_Net_CIM_Credit_Card_Accept_JS_Handler();
    return window.wc_authorize_net_cim_credit_card_accept_js_response_handler = function(response) {
      return window.wc_authorize_net_cim_credit_card_accept_js_handler.handle_response(response);
    };
  });

}).call(this);


